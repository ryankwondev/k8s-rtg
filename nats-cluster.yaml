# nats-cluster.yaml

# 1. NATS 클러스터 인증을 위한 Secret
# drain 명령어나 시스템 계정에 사용할 인증 정보를 저장합니다.
# 비밀번호는 base64로 인코딩해야 합니다.
# 예: echo -n 'YourSecretPassword' | base64
apiVersion: v1
kind: Secret
metadata:
  name: nats-auth
type: Opaque
data:
  # user: sys-user
  # password: YourSecretPassword
  user: c3lzLXVzZXI=
  password: WW91clNlY3JldFBhc3N3b3Jk

---
# 2. NATS 서버 설정을 위한 ConfigMap
# 고정된 routes 대신 동적 DNS Discovery를 사용하여 스케일링에 자동으로 대응합니다.
apiVersion: v1
kind: ConfigMap
metadata:
  name: nats-config
data:
  nats.conf: |
    # 클라이언트 접속 포트
    port: 4222

    # 시스템 계정 설정 (모니터링, 관리 등에 사용)
    system_account: SYS

    # JetStream 활성화 및 데이터 저장 경로
    jetstream {
      store_dir: /data/jetstream
    }
    
    # 인증 설정
    authorization {
      # Secret에서 주입될 사용자 정보
      users = [
        {
          user: sys-user
          password: ${NATS_SYS_PASSWORD} # 환경변수에서 비밀번호를 가져옴
          permissions: {
            # 시스템 계정은 모든 권한을 가짐
            subscribe: {
              allow: [">"]
            }
            publish: {
              allow: [">"]
            }
          }
        }
      ]
    }

    # 클러스터링 설정
    cluster {
      name: nats-k8s-cluster
      listen: 0.0.0.0:6222

      # 동적 클러스터 구성을 위한 DNS Discovery
      # nats Headless Service의 DNS를 조회하여 자동으로 피어를 찾습니다.
      discovery {
        resolver: "DNS"
        service: "nats.default.svc.cluster.local" # 환경에 맞게 namespace 수정
      }
    }

---
# 3. 클라이언트 접속용 서비스 (ClusterIP)
# 앱에서는 'nats://nats-client:4222' 주소로 클러스터에 접속합니다.
apiVersion: v1
kind: Service
metadata:
  name: nats-client
spec:
  selector:
    app: nats
  ports:
    - name: client
      protocol: TCP
      port: 4222
      targetPort: 4222

---
# 4. 클러스터링용 서비스 (Headless)
# StatefulSet의 Pod들이 고유한 DNS 이름을 갖게 하고, 서로를 찾는 데 사용됩니다.
apiVersion: v1
kind: Service
metadata:
  name: nats
spec:
  selector:
    app: nats
  clusterIP: None # Headless Service
  ports:
    - name: cluster
      port: 6222
      targetPort: 6222

---
# 5. NATS 배포용 StatefulSet
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: nats
spec:
  selector:
    matchLabels:
      app: nats
  serviceName: "nats" # Headless Service 이름
  replicas: 3 # 시작 시 3개의 노드로 구성
  template:
    metadata:
      labels:
        app: nats
    spec:
      # Pod 안티-어피니티 설정으로 각 NATS Pod를 다른 K8s 노드에 분산시켜 안정성 확보
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - nats
              topologyKey: "kubernetes.io/hostname"
      containers:
      - name: nats
        image: nats:2.10.7-alpine # 안정적인 최신 버전 명시 권장
        args:
        - "-c"
        - "/etc/nats/nats.conf"
        # Secret의 비밀번호를 Pod의 환경변수로 주입
        env:
        - name: NATS_SYS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: nats-auth
              key: password
        ports:
        - containerPort: 4222
          name: client
        - containerPort: 6222
          name: cluster
        volumeMounts:
        - name: config
          mountPath: /etc/nats
        - name: data
          mountPath: /data
        # --- 안전한 스케일 축소를 위한 preStop Hook ---
        lifecycle:
          preStop:
            exec:
              command:
              - "sh"
              - "-c"
              # Pod가 종료되기 전, 인증 정보를 사용하여 JetStream 데이터를 안전하게 마이그레이션
              - |
                nats server drain --user=sys-user --password=${NATS_SYS_PASSWORD}
                sleep 5
      volumes:
      - name: config
        configMap:
          name: nats-config
  # --- JetStream 데이터 저장을 위한 PVC 템플릿 ---
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "gp2" # 사용하는 스토리지 클래스로 변경
      resources:
        requests:
          storage: 10Gi # 필요에 따라 용량 조절
